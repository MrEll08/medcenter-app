"""client_doctor_visit

Revision ID: 072ab0e3fab9
Revises: 
Create Date: 2025-07-29 15:39:05.536580

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '072ab0e3fab9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('phone_number', sa.TEXT(), nullable=False),
    sa.Column('date_of_birth', sa.DATE(), nullable=True),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('surname', sa.TEXT(), nullable=False),
    sa.Column('patronymic', sa.TEXT(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('dt_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__client')),
    sa.UniqueConstraint('id', name=op.f('uq__client__id'))
    )
    op.create_table('doctor',
    sa.Column('speciality', sa.TEXT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('surname', sa.TEXT(), nullable=False),
    sa.Column('patronymic', sa.TEXT(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('dt_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__doctor')),
    sa.UniqueConstraint('id', name=op.f('uq__doctor__id'))
    )
    op.create_table('visit',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('doctor_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DATE(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('start_time', postgresql.TIME(), server_default=sa.text('CURRENT_TIME'), nullable=False),
    sa.Column('end_time', postgresql.TIME(), nullable=False),
    sa.Column('procedure', sa.TEXT(), nullable=True),
    sa.Column('cost', sa.FLOAT(), nullable=True),
    sa.Column('status', postgresql.ENUM('UNCONFIRMED', 'CONFIRMED', 'IN_PROGRESS', 'COMPLETED', 'PAID', name='visit_status'), server_default=sa.text("'UNCONFIRMED'::visit_status"), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('dt_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk__visit__client_id__client'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], name=op.f('fk__visit__doctor_id__doctor'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__visit')),
    sa.UniqueConstraint('id', name=op.f('uq__visit__id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('visit')
    op.drop_table('doctor')
    op.drop_table('client')
    # ### end Alembic commands ###

    visit_status_enum = postgresql.ENUM(
        'UNCONFIRMED', 'CONFIRMED', 'IN_PROGRESS', 'COMPLETED', 'PAID',
        name='visit_status'
    )
    visit_status_enum.drop(op.get_bind(), checkfirst=True)
